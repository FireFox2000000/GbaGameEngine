namespace __binary_spritesheet_DebugFont_8x8 
{
	// File Header
	extern __attribute__((section(".ewram"))) const unsigned long spriteCount = 95;
	extern __attribute__((section(".ewram"))) const unsigned char paletteLength = 2;
	extern __attribute__((section(".ewram"))) const unsigned long dataLength = 190;

	// Bit0 - 3   Data size in bit units(normally 4 or 8). May be reserved/unused for other compression types 
	// Bit4-7   Compressed type 
	// Bit8-31  Unused, generated in-game as 24bit size of decompressed data in bytes, probably 
	extern __attribute__((section(".ewram"))) const unsigned long compressionTypeSize = 145; 

	extern __attribute__((section(".ewram"))) const unsigned short palette[] = 
	{
		0x0000, 0x7FFF, 
	};

	extern __attribute__((section(".ewram"))) const unsigned char widthMap[] = 
	{
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		
	};

	extern __attribute__((section(".ewram"))) const unsigned char heightMap[] = 
	{
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		8, 8, 8, 8, 8, 
		
	};

	extern __attribute__((section(".ewram"))) const unsigned long offsets[] = 
	{
		0, 2, 4, 6, 8, 
		10, 12, 14, 16, 18, 
		20, 22, 24, 26, 28, 
		30, 32, 34, 36, 38, 
		40, 42, 44, 46, 48, 
		50, 52, 54, 56, 58, 
		60, 62, 64, 66, 68, 
		70, 72, 74, 76, 78, 
		80, 82, 84, 86, 88, 
		90, 92, 94, 96, 98, 
		100, 102, 104, 106, 108, 
		110, 112, 114, 116, 118, 
		120, 122, 124, 126, 128, 
		130, 132, 134, 136, 138, 
		140, 142, 144, 146, 148, 
		150, 152, 154, 156, 158, 
		160, 162, 164, 166, 168, 
		170, 172, 174, 176, 178, 
		180, 182, 184, 186, 188, 
		
	};

	extern __attribute__((section(".ewram"))) const unsigned long data[] = 
	{
		0x10101010, 0x00001000, 

		0x00001414, 0x00000000, 

		0x143E1400, 0x0000143E, 

		0x38147810, 0x00103C50, 

		0x68162906, 0x00006094, 

		0x98040438, 0x00009864, 

		0x00001010, 0x00000000, 

		0x04040810, 0x00001008, 

		0x20201008, 0x00000810, 

		0x387C3854, 0x00000054, 

		0x7C101000, 0x00001010, 

		0x00000000, 0x00081000, 

		0x3C000000, 0x00000000, 

		0x00000000, 0x00001000, 

		0x08102040, 0x00000204, 

		0x42422418, 0x00001824, 

		0x10101810, 0x00003810, 

		0x1820423C, 0x00007E04, 

		0x1820423C, 0x00003C42, 

		0x12141810, 0x0000103E, 

		0x403E027E, 0x00003C42, 

		0x423E023C, 0x00003C42, 

		0x0810207E, 0x00000204, 

		0x423C423C, 0x00003C42, 

		0x7C42423C, 0x00003C40, 

		0x00100000, 0x00001000, 

		0x00100000, 0x00081000, 

		0x06186000, 0x00006018, 

		0x007E0000, 0x0000007E, 

		0x60180600, 0x00000618, 

		0x1820221C, 0x00000800, 

		0x39223C00, 0x38043A29, 

		0x3C241818, 0x00004242, 

		0x221E221E, 0x00001E22, 

		0x0101221C, 0x00001C22, 

		0x2222221E, 0x00001E22, 

		0x021E023E, 0x00003E02, 

		0x021E023E, 0x00000202, 

		0x3901221C, 0x00001C22, 

		0x427E4242, 0x00004242, 

		0x1010107C, 0x00007C10, 

		0x20202038, 0x00001C22, 

		0x0E0A1222, 0x00002212, 

		0x02020202, 0x00007E02, 

		0x92AAC682, 0x00008282, 

		0x524A4642, 0x00004262, 

		0x44444438, 0x00003844, 

		0x021E221E, 0x00000202, 

		0x44444438, 0x00403844, 

		0x0A1E221E, 0x00002212, 

		0x30084438, 0x00003844, 

		0x101010FE, 0x00001010, 

		0x42424242, 0x00003C42, 

		0x24424281, 0x00001824, 

		0xAA928282, 0x000082C6, 

		0x18182442, 0x00004224, 

		0x10284482, 0x00001010, 

		0x0810207E, 0x00007E04, 

		0x0404041C, 0x00001C04, 

		0x10080402, 0x00004020, 

		0x1010101C, 0x00001C10, 

		0x00001408, 0x00000000, 

		0x00000000, 0x00007E00, 

		0x00001008, 0x00000000, 

		0x7C403C00, 0x00005C62, 

		0x423E0202, 0x00003A46, 

		0x04380000, 0x00003804, 

		0x427C4040, 0x00005C62, 

		0x7E423C00, 0x00003C02, 

		0x1C081800, 0x00000808, 

		0x322C0000, 0x1C202C22, 

		0x241C0404, 0x00002424, 

		0x10100010, 0x00001010, 

		0x10180010, 0x0E101010, 

		0x14240404, 0x0000340C, 

		0x08080808, 0x00001808, 

		0x5A660000, 0x00004242, 

		0x4C740000, 0x00004444, 

		0x423C0000, 0x00003C42, 

		0x463A0000, 0x02023E42, 

		0x625C0000, 0x40407C42, 

		0x4C340000, 0x00000404, 

		0x18043800, 0x00001C20, 

		0x083C0800, 0x00001808, 

		0x44440000, 0x00005864, 

		0x42420000, 0x00001824, 

		0x81810000, 0x0000665A, 

		0x24420000, 0x00006618, 

		0x44420000, 0x06081028, 

		0x103C0000, 0x00003C08, 

		0x0C0C0838, 0x00003808, 

		0x10101010, 0x00101010, 

		0x3030101C, 0x00001C10, 

		0x4C000000, 0x00000032, 

		0x7E7E7E7E, 0x00007E7E, 

	};

}
